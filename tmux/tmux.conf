# https://vagr9k.me/tmux-tips-and-tricks
# https://www.sitepoint.com/10-killer-tmux-tips/ 
# https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/


# keyref:
# key   prefix+     +mod   	    +mod+shift  +mod+ctrl   scrollback 
#
# q     -           -           -           -
# w     -           split cwd   split       -
# e     -			vsplit cwd-	vsplit		-
# r     reload		-			-			-           rectangle
# t     -			-			-			-
#
# y     -			-			-			-           yank
# u     -			scrollback	-			-
# i     -			-			-			-
# o     -			-			-			-
# p     -			-			-			-
#
# a     -			-			-			-
# s     --			-			-			-
# d     -			-			-			-
# f     -			-			-			-
# g     -			-			-			-
#
# h     -			move left	-			-
# j     -			move down	-           -
# k     -			move up     -           -
# l     -			move right	-			-
# ;     -			-			-			-
#
# z     -			fullscreen	-			-
# x     -			-			-			-
# c     -			-			-			-
# v     -			-			-			-           visual
# b     -			-			-			-
#
# n     -			-			-			-
# m     -			-			-			-
# ,     -			-			-			-
# .     -			-			-			-
#
# space -			-			-			-           selection
# enter -			-			-			-
# esc   -			-			-			-
# mute  -			-			-			-
# Print -			-			-			-


# set prefix more sensibly
set-option -g prefix M-f
unbind C-b

unbind M-a
set-window-option -g mode-keys vi

bind M-f send-prefix

bind-key r source-file ~/.config/tmux/tmux.conf

# don't rename windows automatically
set-option -g allow-rename off

# Shift Alt vim keys to switch windows
bind -n M-H previous-window
bind -n M-L next-window

##### PLUGINS #####

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

run '~/.config/tmux/plugins/tpm/tpm'

# Mouse support
set -g mouse on
bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
bind -n WheelDownPane select-pane -t= \;                 send-keys -M

# Smart pane switching with awareness of Vim splits.
# set -g @plugin 'christoomey/vim-tmux-navigator'
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys A-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys A-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
#bind-key -T copy-mode-vi 'M-;' last-pane

##### END PLUGINS #####

#-n binds in root table
# fast window management
bind -n M-x kill-pane
bind -n M-X kill-session

bind -n M-c new-window
# normally split off in current working directory
bind -n M-e split-window -h -c "#{pane_current_path}"
bind -n M-w split-window -v -c "#{pane_current_path}"

# shift and press to go from tmux root
bind -n M-E split-window -h
bind -n M-W split-window -v

bind -n M-d detach

bind -n M-n next-window
bind -n M-p previous-window

bind -n M-N rotate-window -U
bind -n M-P rotate-window -D

# fast resizing
bind -n M-J resize-pane -D 3
bind -n M-K resize-pane -U 3
bind -n M-H resize-pane -L 3
bind -n M-L resize-pane -R 3

#quickly enter scrollback
bind -n M-u copy-mode -e \


# vim like copying
# https://www.rockyourcode.com/copy-and-paste-in-tmux/
# https://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/
# https://www.rockyourcode.com/copy-and-paste-in-tmux

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind P paste-buffer

# modded command
# -X send to copy mode

# mode-keys: 
#   emacs -> copy-mode
#   vi    -> copy-mode-vi
# make sure to set mode-keys above
# if-shell 'test $XDG_SESSION_TYPE -eq "wayland"' 'copy_cmd="wl-copy"' 'copy_cmd="xclip -se c -i"'
if-shell 'test $XDG_SESSION_TYPE -eq "wayland"' 'copy_cmd="wl-copy"' 'copy_cmd="xsel -i --clipboard"'
# bind -t vi-copy y copy-pipe "xclip -sel clip -i"
# bind -T copy-mode-vi y send -X copy-pipe-no-clear "xclip -sel clip -i"
# bind-key -T copy-mode-vi y                  run-shell { tmux send -X copy-pipe-and-cancel "$copy_cmd" }
# bind-key -T copy-mode-vi Enter              run-shell { tmux send -X copy-pipe-and-cancel "$copy_cmd" }

set-option -g history-limit 100000
set-option -g status-keys vi
